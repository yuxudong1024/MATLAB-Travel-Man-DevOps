variables:
  BUILD_IMAGE: "false"
  IMAGE_NAME: "matlab-r2024b"
  IMAGE_TAG: "1.0"

stages:
  - prepare
  - test
  - deploy
  - publish

prepare-docker-image:
  stage: prepare
  tags:
    - docker
  script:
    - DOCKER_IMAGE="$CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"
    - echo "Building and pushing Docker image..."
    - docker build -t $DOCKER_IMAGE .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY_IMAGE"
    - docker push $DOCKER_IMAGE
  rules:
    - if: '$BUILD_IMAGE == "true"'

unit-test-job:
  stage: test
  tags:
    - docker-exec
  image: 
    name: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
  script:
    - echo "Running unit tests..."
    - mkdir -p public/branches/$CI_BRANCH_NAME/$CI_COMMIT_SHORT_SHA
    - matlab-batch "buildtool defineOutputFolder(public/branches/$CI_BRANCH_NAME/$CI_COMMIT_SHORT_SHA) check test -verbosity Verbose"
  coverage: '/Statement: \d+/\d+ \((\d+\.\d+)%\)/'
  artifacts:
    when: always
    paths:
      - public
    reports:
      junit: public/test-reports/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: public/code-coverage/cobertura-coverage.xml

visdiff:
  stage: test
  tags:
    - docker-exec
  image: 
    name: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
  script:
    - echo "Comparing current version of MATLAB app to status in main branch..."
    - git config --global --add safe.directory $CI_PROJECT_DIR
    - matlab-batch "buildtool publishAppDiffToMain('visdiff') -verbosity Verbose"
    - echo "Report published as artifact in visdiff folder"
  dependencies: [] # Prevent downloading of artifacts from previous jobs
  artifacts:
    paths:
      - visdiff/*
  except:
    - main

deploy-job:
  stage: deploy
  tags:
    - docker-exec
  image: 
    name: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
  script:
    - echo "Deploying ctf and web app..."
    - matlab-batch "mpsArchiveName=['shortestTrip',upper(getenv('GITLAB_USER_LOGIN'))]; setenv('MPS_ARCHIVE_NAME',mpsArchiveName); disp(mpsArchiveName); mwaArchiveName=['TravelingSalesman',upper(getenv('GITLAB_USER_LOGIN'))]; disp(mwaArchiveName); buildtool deployFrontend(mpsArchiveName) deployMPSArchive(mpsArchiveName) deployWebApp(mwaArchiveName) integrationTest -verbosity Verbose"
  artifacts:
    when: always
    paths:
      - public
  #only:
  #  - main

pages:
  stage: publish
  script:
    - echo "Creating Gitlab pages"
    - if (( $CI_BRANCH_NAME != "main" )); cp -r public/branches/$CI_BRANCH_NAME/$CI_COMMIT_SHORT_SHA/* public; fi
    - mkdir -p "public/$CI_BRANCH_NAME"; cp public/code-coverage/standalone.html "public/$CI_BRANCH_NAME/standalone.html";
  artifacts:
    paths:
      - public
